;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name gateway_monitoring.server.logging, :imports nil, :requires {n cljs.nodejs, cljs.nodejs cljs.nodejs, string clojure.string, clojure.string clojure.string, cljs.core.async cljs.core.async}, :uses {<! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :defs {fs {:name gateway_monitoring.server.logging/fs, :file "src\\gateway_monitoring\\server\\logging.cljs", :line 7, :column 1, :end-line 7, :end-column 8, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\logging.cljs", :line 7, :column 6, :end-line 7, :end-column 8}}, log {:protocol-inline nil, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\logging.cljs", :line 11, :column 8, :end-line 11, :end-column 11, :private true, :arglists (quote ([text]))}, :private true, :name gateway_monitoring.server.logging/log, :variadic false, :file "src\\gateway_monitoring\\server\\logging.cljs", :end-column 11, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}, clear-log {:protocol-inline nil, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\logging.cljs", :line 52, :column 7, :end-line 52, :end-column 16, :arglists (quote ([]))}, :name gateway_monitoring.server.logging/clear-log, :variadic false, :file "src\\gateway_monitoring\\server\\logging.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, log-file-name {:name gateway_monitoring.server.logging/log-file-name, :file "src\\gateway_monitoring\\server\\logging.cljs", :line 9, :column 1, :end-line 9, :end-column 19, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\logging.cljs", :line 9, :column 6, :end-line 9, :end-column 19}}, path {:name gateway_monitoring.server.logging/path, :file "src\\gateway_monitoring\\server\\logging.cljs", :line 8, :column 1, :end-line 8, :end-column 10, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\logging.cljs", :line 8, :column 6, :end-line 8, :end-column 10}}, parse-content {:protocol-inline nil, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\logging.cljs", :line 18, :column 8, :end-line 18, :end-column 21, :private true, :arglists (quote ([c err res]))}, :private true, :name gateway_monitoring.server.logging/parse-content, :variadic false, :file "src\\gateway_monitoring\\server\\logging.cljs", :end-column 21, :method-params ([c err res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 3, :fn-var true, :arglists (quote ([c err res]))}, warn {:protocol-inline nil, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\logging.cljs", :line 31, :column 7, :end-line 31, :end-column 11, :arglists (quote ([& text])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(text)], :arglists ([& text]), :arglists-meta (nil)}}, :name gateway_monitoring.server.logging/warn, :variadic true, :file "src\\gateway_monitoring\\server\\logging.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(text)], :arglists ([& text]), :arglists-meta (nil)}, :method-params [(text)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 0, :fn-var true, :arglists ([& text])}, content {:protocol-inline nil, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\logging.cljs", :line 24, :column 7, :end-line 24, :end-column 14, :arglists (quote ([]))}, :name gateway_monitoring.server.logging/content, :variadic false, :file "src\\gateway_monitoring\\server\\logging.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, full-log-file-path {:protocol-inline nil, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\logging.cljs", :line 29, :column 7, :end-line 29, :end-column 25, :arglists (quote ([]))}, :name gateway_monitoring.server.logging/full-log-file-path, :variadic false, :file "src\\gateway_monitoring\\server\\logging.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, info {:protocol-inline nil, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\logging.cljs", :line 33, :column 7, :end-line 33, :end-column 11, :arglists (quote ([& text])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(text)], :arglists ([& text]), :arglists-meta (nil)}}, :name gateway_monitoring.server.logging/info, :variadic true, :file "src\\gateway_monitoring\\server\\logging.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(text)], :arglists ([& text]), :arglists-meta (nil)}, :method-params [(text)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 0, :fn-var true, :arglists ([& text])}, on-log-cleared {:protocol-inline nil, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\logging.cljs", :line 46, :column 8, :end-line 46, :end-column 22, :private true, :arglists (quote ([c err]))}, :private true, :name gateway_monitoring.server.logging/on-log-cleared, :variadic false, :file "src\\gateway_monitoring\\server\\logging.cljs", :end-column 22, :method-params ([c err]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c err]))}, error {:name gateway_monitoring.server.logging/error, :file "src\\gateway_monitoring\\server\\logging.cljs", :line 35, :column 1, :end-line 35, :end-column 16, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\logging.cljs", :line 35, :column 11, :end-line 35, :end-column 16}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:else :default :recur :hierarchy}, :order [:recur :else :hierarchy :default]}, :doc nil}