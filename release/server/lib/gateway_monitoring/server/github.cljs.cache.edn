;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros, <? gateway_monitoring.server.error-handling.error-handling, with-try-catch gateway_monitoring.server.error-handling.error-handling}, :excludes #{}, :name gateway_monitoring.server.github, :imports nil, :requires {n cljs.nodejs, cljs.nodejs cljs.nodejs, gateway_monitoring.server.error-handling.error-handling gateway_monitoring.server.error-handling.error-handling, cljs.core.async cljs.core.async}, :uses {timeout cljs.core.async, <! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :defs {request {:name gateway_monitoring.server.github/request, :file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\github.cljs", :line 8, :column 1, :end-line 8, :end-column 13, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\github.cljs", :line 8, :column 6, :end-line 8, :end-column 13}}, user-agent {:name gateway_monitoring.server.github/user-agent, :file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\github.cljs", :line 10, :column 1, :end-line 10, :end-column 16, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\github.cljs", :line 10, :column 6, :end-line 10, :end-column 16}}, process-response {:protocol-inline nil, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\github.cljs", :line 12, :column 8, :end-line 12, :end-column 24, :private true, :arglists (quote ([c error body]))}, :private true, :name gateway_monitoring.server.github/process-response, :variadic false, :file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\github.cljs", :end-column 24, :method-params ([c error body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 3, :fn-var true, :arglists (quote ([c error body]))}, execute-get {:protocol-inline nil, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\github.cljs", :line 17, :column 8, :end-line 17, :end-column 19, :private true, :arglists (quote ([url]))}, :private true, :name gateway_monitoring.server.github/execute-get, :variadic false, :file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\github.cljs", :end-column 19, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url]))}, release {:protocol-inline nil, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\github.cljs", :line 23, :column 7, :end-line 23, :end-column 14, :arglists (quote ([url]))}, :name gateway_monitoring.server.github/release, :variadic false, :file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\github.cljs", :end-column 14, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, gateway_monitoring.server.error-handling.error-handling gateway_monitoring.server.error-handling.error-handling}, :cljs.analyzer/constants {:seen #{:user-agent :else :name :recur :headers :url :keywordize-keys}, :order [:keywordize-keys :url :headers :user-agent :recur :name :else]}, :doc nil}