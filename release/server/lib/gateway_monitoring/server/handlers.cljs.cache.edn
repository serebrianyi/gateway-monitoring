;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros, <? gateway_monitoring.server.error-handling.error-handling}, :excludes #{}, :name gateway_monitoring.server.handlers, :imports nil, :requires {gateway_monitoring.server.logging gateway_monitoring.server.logging, gateway_monitoring.server.config gateway_monitoring.server.config, github gateway_monitoring.server.github, gateway_monitoring.server.github gateway_monitoring.server.github, cljs.core.async cljs.core.async, config gateway_monitoring.server.config, n cljs.nodejs, cljs.nodejs cljs.nodejs, string clojure.string, gateway_monitoring.server.data-storage gateway_monitoring.server.data-storage, logging gateway_monitoring.server.logging, clojure.string clojure.string}, :uses {unknown-date-time gateway_monitoring.server.data-storage, timeout cljs.core.async, <! cljs.core.async, chan cljs.core.async, unknown gateway_monitoring.server.data-storage, app-state gateway_monitoring.server.data-storage, put! cljs.core.async}, :defs {create-packet {:protocol-inline nil, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\handlers.cljs", :line 88, :column 7, :end-line 88, :end-column 20, :arglists (quote ([]))}, :name gateway_monitoring.server.handlers/create-packet, :variadic false, :file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\handlers.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, clear-log-handler {:protocol-inline nil, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\handlers.cljs", :line 34, :column 7, :end-line 34, :end-column 24, :arglists (quote ([req res]))}, :name gateway_monitoring.server.handlers/clear-log-handler, :variadic false, :file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\handlers.cljs", :end-column 24, :method-params ([req res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([req res]))}, log-handler {:protocol-inline nil, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\handlers.cljs", :line 24, :column 7, :end-line 24, :end-column 18, :arglists (quote ([req res]))}, :name gateway_monitoring.server.handlers/log-handler, :variadic false, :file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\handlers.cljs", :end-column 18, :method-params ([req res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([req res]))}, moment {:name gateway_monitoring.server.handlers/moment, :file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\handlers.cljs", :line 12, :column 1, :end-line 12, :end-column 12, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\handlers.cljs", :line 12, :column 6, :end-line 12, :end-column 12}}, add-packet {:protocol-inline nil, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\handlers.cljs", :line 90, :column 7, :end-line 90, :end-column 17, :arglists (quote ([]))}, :name gateway_monitoring.server.handlers/add-packet, :variadic false, :file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\handlers.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, available-versions-handler {:protocol-inline nil, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\handlers.cljs", :line 43, :column 7, :end-line 43, :end-column 33, :arglists (quote ([req res]))}, :name gateway_monitoring.server.handlers/available-versions-handler, :variadic false, :file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\handlers.cljs", :end-column 33, :method-params ([req res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists (quote ([req res]))}, try-swap! {:protocol-inline nil, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\handlers.cljs", :line 14, :column 7, :end-line 14, :end-column 16, :arglists (quote ([configuration simbol config-fn] [configuration simbol config-fn default-value])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([configuration simbol config-fn] [configuration simbol config-fn default-value]), :arglists ([configuration simbol config-fn] [configuration simbol config-fn default-value]), :arglists-meta (nil nil)}}, :name gateway_monitoring.server.handlers/try-swap!, :variadic false, :file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\handlers.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([configuration simbol config-fn] [configuration simbol config-fn default-value]), :arglists ([configuration simbol config-fn] [configuration simbol config-fn default-value]), :arglists-meta (nil nil)}, :method-params ([configuration simbol config-fn] [configuration simbol config-fn default-value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 4, :fn-var true, :arglists ([configuration simbol config-fn] [configuration simbol config-fn default-value])}, header-info! {:protocol-inline nil, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\handlers.cljs", :line 72, :column 7, :end-line 72, :end-column 19, :arglists (quote ([req res]))}, :name gateway_monitoring.server.handlers/header-info!, :variadic false, :file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\handlers.cljs", :end-column 19, :method-params ([req res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([req res]))}, current-versions-handler! {:protocol-inline nil, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\handlers.cljs", :line 56, :column 7, :end-line 56, :end-column 32, :arglists (quote ([req res]))}, :name gateway_monitoring.server.handlers/current-versions-handler!, :variadic false, :file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\handlers.cljs", :end-column 32, :method-params ([req res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([req res]))}, packet-handler {:protocol-inline nil, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\handlers.cljs", :line 95, :column 7, :end-line 95, :end-column 21, :arglists (quote ([req res]))}, :name gateway_monitoring.server.handlers/packet-handler, :variadic false, :file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\handlers.cljs", :end-column 21, :method-params ([req res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 2, :fn-var true, :arglists (quote ([req res]))}, start-packet-loop {:protocol-inline nil, :meta {:file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\handlers.cljs", :line 98, :column 7, :end-line 98, :end-column 24, :arglists (quote ([]))}, :name gateway_monitoring.server.handlers/start-packet-loop, :variadic false, :file "C:\\Users\\MSE\\Documents\\gateway-monitoring\\src\\gateway_monitoring\\server\\handlers.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, gateway_monitoring.server.error-handling.error-handling gateway_monitoring.server.error-handling.error-handling}, :cljs.analyzer/constants {:seen #{:path :application-id :else :content :packet-forwarder-version :online-since :recur :upstream? :node-id :hal-library-version :release-url :datetime :gateway-id :gateway-monitoring-software-version :packets}, :order [:else :recur :content :path :hal-library-version :packet-forwarder-version :release-url :gateway-monitoring-software-version :gateway-id :online-since :datetime :node-id :application-id :upstream? :packets]}, :doc nil}